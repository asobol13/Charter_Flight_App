"""empty message

Revision ID: 8632a36dc4b5
Revises: 
Create Date: 2022-11-14 13:56:57.380816

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8632a36dc4b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('charter_passengers')
    op.drop_table('pilot_models')
    op.drop_table('pilots')
    op.drop_table('passengers')
    op.drop_table('charters')
    op.drop_table('aircrafts')
    op.drop_table('models')
    op.drop_constraint('accounts_customer_id_key', 'accounts', type_='unique')
    op.drop_constraint('accounts_password_key', 'accounts', type_='unique')
    op.create_unique_constraint(None, 'accounts', ['phonenumber'])
    op.drop_constraint('fk_accounts_customers', 'accounts', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('fk_accounts_customers', 'accounts', 'customers', ['customer_id'], ['customer_id'])
    op.drop_constraint(None, 'accounts', type_='unique')
    op.create_unique_constraint('accounts_password_key', 'accounts', ['password'])
    op.create_unique_constraint('accounts_customer_id_key', 'accounts', ['customer_id'])
    op.create_table('models',
    sa.Column('model_id', sa.INTEGER(), server_default=sa.text("nextval('models_model_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('model_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('hourly_rate', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('wait_time_rate', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tail_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tail_number'], ['aircrafts.tail_number'], name='fk_models_aircrafts'),
    sa.PrimaryKeyConstraint('model_id', name='models_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('aircrafts',
    sa.Column('tail_number', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('aircraft_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('tail_number', name='aircrafts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('charters',
    sa.Column('charter_number', sa.INTEGER(), server_default=sa.text("nextval('charters_charter_number_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('departure_airport', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('destination_airport', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('departure_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('departure_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('return_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('wait_hours', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('flight_hours', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('number_pax', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tail_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('pilot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('return_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], name='fk_charters_customers'),
    sa.ForeignKeyConstraint(['pilot_id'], ['pilots.pilot_id'], name='fk_charters_pilots'),
    sa.ForeignKeyConstraint(['tail_number'], ['aircrafts.tail_number'], name='fk_charters_aircrafts'),
    sa.PrimaryKeyConstraint('charter_number', name='charters_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('passengers',
    sa.Column('passenger_id', sa.INTEGER(), server_default=sa.text("nextval('passengers_passenger_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('flying_with', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('passenger_id', name='passengers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pilots',
    sa.Column('pilot_id', sa.INTEGER(), server_default=sa.text("nextval('pilots_pilot_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('pilot_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('hourly_rate', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.Column('wait_time_rate', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('pilot_id', name='pilots_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pilot_models',
    sa.Column('pilot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('model_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], name='fk_pilot_models_models'),
    sa.ForeignKeyConstraint(['pilot_id'], ['pilots.pilot_id'], name='fk_pilot_models_pilots'),
    sa.PrimaryKeyConstraint('pilot_id', 'model_id', name='pilot_models_pkey')
    )
    op.create_table('charter_passengers',
    sa.Column('charter_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('passenger_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['charter_number'], ['charters.charter_number'], name='fk_charter_passengers_charters'),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.passenger_id'], name='fk_charter_passengers_passengers'),
    sa.PrimaryKeyConstraint('charter_number', 'passenger_id', name='charter_passengers_pkey')
    )
    # ### end Alembic commands ###
